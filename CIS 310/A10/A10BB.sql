--A10BB
--CIS310-01
--DUE: DEC-6-17
--Write a stored procedure to populate the star schema database with the transaction data in the Large Company database. 
--Save the stored procedure in a file named A10BB.sql.
--The stored procedure should be such that it can be rerun/tested whether or not the star schema database is populated. 


--STORED PROCEDURE TO TRUNCATE TABLES



ALTER PROCEDURE A10BB
AS
BEGIN
	ALTER TABLE FACT
	DROP CONSTRAINT PK_FACT,
		 CONSTRAINT FK_FACT_CUSTOMERDIM ,
		 CONSTRAINT FK_FACT_PRODUCTDIM,
		 CONSTRAINT FK_FACT_TIMEDIM,
		 CONSTRAINT FK_FACT_EMPLOYEEDIM

	ALTER TABLE CUSTOMERDIM
	DROP CONSTRAINT PK_CUSTOMERDIM

	ALTER TABLE TIMEDIM
	DROP CONSTRAINT PK_TIMEDIM 

	ALTER TABLE PRODUCTDIM
	DROP CONSTRAINT PK_PRODUCTDIM

	ALTER TABLE EMPLOYEEDIM
	DROP CONSTRAINT PK_EMPLOYEEDIM

	
	TRUNCATE TABLE CUSTOMERDIM
	TRUNCATE TABLE PRODUCTDIM
	TRUNCATE TABLE TIMEDIM
	TRUNCATE TABLE EMPLOYEEDIM
	TRUNCATE TABLE FACT
	TRUNCATE TABLE STAGING


	ALTER TABLE PRODUCTDIM
		ADD CONSTRAINT PK_PRODUCTDIM PRIMARY KEY (ProductID)
	
	ALTER TABLE CUSTOMERDIM
		ADD CONSTRAINT PK_CUSTOMERDIM PRIMARY KEY (CustomerID)

	ALTER TABLE EMPLOYEEDIM
		ADD CONSTRAINT PK_EMPLOYEEDIM PRIMARY KEY (EmployeeID)

	ALTER TABLE TIMEDIM
		ADD CONSTRAINT PK_TIMEDIM PRIMARY KEY(TimeID)
	 
	ALTER TABLE FACT
		ADD CONSTRAINT PK_FACT PRIMARY KEY (CustomerID,TimeID,ProductID,EmployeeID),
			CONSTRAINT FK_FACT_CUSTOMERDIM FOREIGN KEY (CustomerID) REFERENCES CUSTOMERDIM,
			CONSTRAINT FK_FACT_TIMEDIM FOREIGN KEY (TimeID) REFERENCES TIMEDIM,
			CONSTRAINT FK_FACT_PRODUCTDIM FOREIGN KEY (ProductID) REFERENCES PRODUCTDIM,
			CONSTRAINT FK_FACT_EMPLOYEEDIM FOREIGN KEY (EmployeeID) REFERENCES EMPLOYEEDIM

--POPULATE DIMENSION TABLES
	
	--POPULATE CUSTOMER DIMENSION
	INSERT INTO CUSTOMERDIM
	SELECT Cust_Code, Cust_Fname, Cust_Lname, Cust_City, Cust_State, Cust_Zip
	FROM   LGCUSTOMER

	
	--POPULATE PRODUCT DIMENSION
	INSERT INTO PRODUCTDIM
	SELECT P.Prod_SKU, P.Prod_Descript, P.Prod_Type, B.Brand_ID, B.Brand_Name, B.Brand_Type
	FROM   LGPRODUCT P INNER JOIN LGBRAND B
		   ON P.Brand_ID = B.Brand_ID
	
	--POPULATE TIME DIMENSION
	INSERT INTO TIMEDIM
	SELECT Inv_Date, YEAR(Inv_Date), MONTH(Inv_Date), DATEPART(QQ,inv_date) 
	FROM   LGINVOICE

	--POPULATE EMPLOYEE DIMENSION
	INSERT INTO EMPLOYEEDIM
	SELECT E.Emp_Num, E.Emp_Fname, E.Emp_Lname, E.Emp_Title, D.Dept_Num, D.Dept_Name
	FROM   LGEMPLOYEE E INNER JOIN LGDEPARTMENT D
		   ON E.Dept_Num = D.Dept_Num

--POPULATE STAGING TABLE


	INSERT INTO STAGING (Line_Qty, Line_Price, Cust_Code, Prod_Sku, Inv_Date, Emp_Num)
    SELECT  SUM(Line_Qty), Line_Price, LC.Cust_Code, LP.Prod_SKU, LI.Inv_Date, LE.Emp_Num
	FROM   LGPRODUCT LP INNER JOIN LGLINE LL 
		   ON LP.Prod_SKU = LL.Prod_SKU
		   INNER JOIN LGINVOICE LI 
		   ON LL.Inv_Num = LI.Inv_Num
		   INNER JOIN LGCUSTOMER LC
		   ON LC.CUST_CODE = LI.CUST_CODE
		   INNER JOIN LGEMPLOYEE LE 
		   ON LI.EMPLOYEE_ID = LE.EMP_NUM
	GROUP BY Line_Price, LC.Cust_Code, LP.Prod_Sku, Inv_Date, Emp_Num
		   
-- ADD DATA WAREHOUSE KEYS TO STAGING STABLE FOR EACH DIMENSION

	UPDATE STAGING 
	SET    CustomerID = C.CustomerID
	FROM   STAGING S INNER JOIN CUSTOMERDIM C
		   ON S.Cust_Code = C.Cust_Code

	UPDATE STAGING
	SET    ProductID = P.ProductID
	FROM   Staging S INNER JOIN PRODUCTDIM P
	       ON S.Prod_SKU = P.Prod_SKU

	UPDATE STAGING
	SET    TimeID = T.TimeID
	FROM   Staging S INNER JOIN TIMEDIM T
		   ON S.Inv_Date = T.Inv_Date
	
	UPDATE STAGING
	SET    EmployeeID = E.EmployeeID
	FROM   STAGING S INNER JOIN EMPLOYEEDIM E
	       ON S.Emp_Num = E.Emp_Num

--POPULATE FACT TABLE
	INSERT INTO FACT 
	SELECT CustomerID, ProductID, TimeID, EmployeeID, Line_Qty, Line_Price
	FROM   STAGING
	



END